import{D as u}from"./react-vendor-Bhg-ak87.js";const n=u(a=>({products:[],setProducts:s=>a({products:s}),createProduct:async s=>{if(!s.name||!s.image||!s.price)return{success:!1,message:"All fields are required"};const t=await(await fetch("api/products",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(s)})).json();return a(e=>({products:[...e.products,t.data]})),{success:!0,message:"Product created successfully"}},fetchProducts:async()=>{const c=await(await fetch("api/products")).json();a({products:c.data})},deleteProduct:async s=>{const t=await(await fetch(`api/products/${s}`,{method:"DELETE"})).json();return t.success?(a(e=>({products:e.products.filter(r=>r._id!==s)})),{success:!0,message:t.message}):{success:!1,message:t.message}},updateProduct:async(s,c)=>{const e=await(await fetch(`api/products/${s}`,{method:"PATCH",headers:{"Content-Type":"application/json"},body:JSON.stringify(c)})).json();return e.success?(a(r=>({products:r.products.map(o=>o._id===s?e.data:o)})),{success:!0,message:e.message}):{success:!1,message:e.message}}}));export{n as u};
